Story #1)
    Users can log in
    Priority: High?
    Complexity: Low (1)
    Tests:
        - Validate users exist
        - Validate passwords are correct
    
Story #2)
    Users can create an account with standard permissions
    Priority: High?
    Complexity: Low (1)
    Tests:
        - Check if users already exists in database
        - Test flash notifications
    
Story #3)
    A master user can resolve account creation attempts
    Priority: High?
    Complexity: Medium (3)
    Tests:
        - Check that approved accounts can log in
        - Check that denied accounts cannot log in
        - Check that denied accounts can attempt to create a new account
    
Story #4)
    A master user can upload a spreadsheet of data
    Priority: High
    Complexity: Low (2)
    Tests:
        - Check that data is parsed correctly
        - Check that data is inserted into the database correctly
        - Reject improperly formatted data
        
Story #5)
    A master user can undo an upload of a set of data
    Priority: Medium
    Complexity: Low (1)

Story #5)
    Users can view data formatted with a calender
    Priority: High
    Complexity: Medium (4)
    Tests:
    
Story #6)
    Users can view data formatted by day
    Priority: High
    Complexity: Medium (4)
    Tests:
    
Story #7)
    Users can compare two sets of data
    Priority: Medium
    Complexity: High (6)
    Tests:
    
Story #8)
    Users can view a prediction of projected data
    Priority: Low
    Complexity: Low (2)
    Tests:
    
Story #9)
    Users can export a set of data to downloadable formats
    Priority: Low?
    Complexity: Low?
    Tests:
    
Story #10)
    Users can filter data into a smaller subset of data by date
    Priority: High
    Complexity: Medium (3)
    Tests:

Story #11)
    Users can filter data into a smaller subset of data by retailer
    Priority: High
    Complexity: Medium (3)
    Tests:
    
Story #12)
    Users can filter data into a smaller subset of data by transaction type
    Priority: Medium
    Complexity: Medium (3)
    Tests:
    
Velocity for story #4: estimated 3 hours


Logging in
    - Authenticate accounts logged in
        - Send back to login page if rejected
        - Proceed to dashbood if accepted
    - Create master account
        - Create approval page for verifying new users
            - Send notification to user if their account was accepted/denied
            
    - Login page front end
    - Registration page back end
    - Database integration-
        - User model
        - Account creation queries
        - Account logging in queries
        
Import Data
    - Upload spreadsheet
    - Parse spreadsheet and transform into suitable structure for database
    
Dashboard
    - Calender View
        - [Back End] Retrieve data and pass to front-end
        - [Front End] Design
            - HTML/CSS/JS+AJAX (+ React?) + colour coded
        - Link days to respective Daily View page
    - Daily View
        - [Back End] Retrieve data and pass to front-end
        - [Front End] Design
            - HTML/CSS/JS+AJAX (+ React?) + colour coded
    - Comparison View
        - [Back End] Retrieve data and pass to front-end
        - [Front End] Design
            - HTML/CSS/JS+AJAX (+ React?) + colour coded
    - Prediction View
        - [Back End] Retrieve data and pass to front-end
        - [Front End] Design
            - HTML/CSS/JS+AJAX (+ React?) + colour coded
    - Export Data View
        - [Back End] Retrieve data
        - [Back End] Generate PDF or Image, etc
        - [Back End] Serve file as download to user
    - Filtering
        - Filter queries
        - [Front End] Design UI for users to filter items (inspiration: advanced search on Google)
    - Formatting
        

Questions:

Login details? Do we need to authenticate a user? Or is it a walk in web app for any user?
Data prediction?
Mobile responsive? Does it need to scale?
Going for colours, flashy look, calendar etc.
compared previous weeks
data parameters (data/time)

Data prediction* leave until after
Only do if we have extra time


Notification for new data 
notify on site (countdown)
user interaction (black out day, no data, prompt upload page) 

