extend page

block sidebar
	section
		p Test 1


block content
	script(src='/chartjs/Chart.js')
	script(src="https://maps.googleapis.com/maps/api/js?sensor=false")
	script(src='/hmap/heatmap.js')
	script(src='/hmap/gmaps-heatmap.js')
	
	
	div(class="block")
	

		- for (var i = 0; i < outlets.length + 1; i++)
			-if (i !== outlets.length)
				- var showGraph = false;
				- for (var e = 0; e < datasets[i].data.length; e++)
					- if (datasets[i].data[e])
						- showGraph = true;
				-if (showGraph)
					button(type="button", "onclick"="updateChart("+i+")")= outlets[i]
				- else
					// button(type="button", "onclick"="updateChart("+i+")")= outlets[i] +  "(N)"
			-else
				script.
					window.combinedIndex = #{i};
				button(type="button", "onclick"="updateChart("+i+")")= "Combined"
			
		
		
		canvas#myChart
			script.
				var ctx = document.getElementById("myChart").getContext('2d');
				var labels = !{JSON.stringify(hourLabels)};
				var ds = !{JSON.stringify(datasets)};
				var dsCombined = [ !{JSON.stringify( datasets[datasets.length - 1] )} ];
				var dsAll = !{JSON.stringify(datasets)};
				
				var myChart = new Chart(ctx, {
					type: 'bar',
					data: {
						labels: labels,
						datasets: dsCombined
					},
					options: {
						scales: {
							yAxes: [{
								ticks: {
									beginAtZero:true
								},
								scaleLabel: {
									display: true,
									labelString: 'Revenue (GBP)'
								}
							}]
						}
					}
				});
				
				
		
		script.
			
			
			let dataToggle = {};
			dataToggle[combinedIndex] = true;
			function updateChart(index)
			{
				console.log(index);
				dataToggle[index] = !dataToggle[index];
				console.log(dataToggle[index]);
				
				let data = [];
				let toggles = Object.keys(dataToggle);
				for (let i = 0; i < toggles.length; i++) {
					
					if (dataToggle[toggles[i]]) {
						data.push(dsAll[toggles[i]]);
					}
				}
				
				myChart.data.datasets = data; //[dsAll[index]];
				myChart.update();
			}
			
			
	div(id="map-canvas", style="height:500px")
		
	script.
		window.onload=function() {
		var mapOptions = {
			zoom: 16,
			center: new google.maps.LatLng(56.4577377,-2.9810413),
			mapTypeId: google.maps.MapTypeId.MAP
			};
			
		map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
		
		heatmap = new HeatmapOverlay(map, 
		  {
			 // radius should be small ONLY if scaleRadius is true (or small radius is intended)
			"radius": 0.0006,
			"maxOpacity": 1, 
			// scales the radius based on map zoom
			"scaleRadius": true, 
			// if set to false the heatmap uses the global maximum for colorization
			// if activated: uses the data maximum within the current map boundaries 
			//   (there will always be a red spot with useLocalExtremas true)
			"useLocalExtrema": false,
			// which field name in your data represents the latitude - default "lat"
			latField: 'lat',
			// which field name in your data represents the longitude - default "lng"
			lngField: 'lng',
			// which field name in your data represents the data value - default "value"
			valueField: 'count'
		  }
		);
		
		var testData = {
			max: 8, 
			data: [{lat:56.4577377, lng:-2.9810413, count: 7}, {lat:56.4578377, lng:-2.9610413, count: 3}] 
		};
		
		heatmap.setData(testData);
		
		};
		
		